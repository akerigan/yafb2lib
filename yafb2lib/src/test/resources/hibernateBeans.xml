<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util-2.0.xsd">

    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean" scope="singleton">
        <property name="configLocation" value="classpath:/akerigan/yafb2lib/persist/hibernate/hibernate.cfg.xml"/>
    </bean>

    <!-- Advice classes -->
    <bean id="tracingBeforeAdvice" class="akerigan.yafb2lib.aop.advice.TracingBeforeAdvice"/>

    <!-- Advisor: way to associate advice beans with pointcuts -->
    <!-- pointcut definition for before method call advice -->
    <bean id="traceBeforeAdvisor"
          class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
        <property name="advice">
            <ref local="tracingBeforeAdvice"/>
        </property>
        <property name="pattern" value=".*\.process.*"/>
    </bean>

    <bean id="txnProxyTemplate" abstract="true"
          class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager" ref="transactionManager"/>
        <property name="transactionAttributes">
            <props>
                <prop key="*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
        <property name="preInterceptors">
            <list>
                <ref bean="traceBeforeAdvisor"/>
            </list>
        </property>
    </bean>

    <bean id="bookDao" class="akerigan.yafb2lib.persist.dao.HibernateBookDao" scope="prototype">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="bookService" parent="txnProxyTemplate">
        <property name="target">
            <bean class="akerigan.yafb2lib.persist.service.BookServiceImpl" scope="prototype">
                <property name="bookDao" ref="bookDao"/>
            </bean>
        </property>
    </bean>

    <!--JDBC templating-->
    <bean id="jdbcDataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost/bookdb2"/>
        <property name="username" value="root"/>
        <property name="initialSize" value="5"/>
        <property name="maxActive" value="10"/>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
        <constructor-arg ref="jdbcDataSource"/>
    </bean>

    <bean id="jdbcBookDao" class="akerigan.yafb2lib.persist.dao.JdbcTemplateBookDao" scope="prototype">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean>

    <bean id="jdbcBookService" class="akerigan.yafb2lib.persist.service.BookServiceImpl" scope="prototype">
        <property name="bookDao" ref="jdbcBookDao"/>
    </bean>
    
</beans>